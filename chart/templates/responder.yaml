{{ if eq .Values.responder.enabled true }}
apiVersion: v1
kind: Service
metadata:
  name: responder
  labels:
    app: responder
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: responder
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: responder
  labels:
    app: responder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: responder
  template:
    metadata:
      labels:
        app: responder
        sidecar.istio.io/inject: "true"
        istio.io/rev: "asm-managed"
    spec:
      serviceAccountName: isidro-microservices
      containers:
      - name: responder
        image: {{ .Values.responder.image.repository }}:{{ .Values.responder.image.tag }}
        imagePullPolicy: Always
        env:
        - name: SLACK_OAUTH_TOKEN
          value: "{{ .Values.slack.oauthToken }}"
        - name: MATTERMOST_ACCESS_TOKEN
          value: "{{ .Values.mattermost.accessToken }}"
        - name: ISIDRO_DOMAIN
          value: "{{ .Values.certbot.domain }}"
      restartPolicy: Always
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: responder
spec:
  podSelector:
    matchLabels:
      app: responder
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: orchestration
    - podSelector:
        matchLabels:
          app: repeater
    - podSelector:
        matchLabels:
          app: tasks
    - podSelector:
        matchLabels:
          app: deployer-github-workers
  egress:
  - {}
{{ end }}